name: Build
on:
  workflow_call: 
    inputs:
      dotnet-version:
        type: string
        default: "8.0.x"
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ inputs.dotnet-version}}
      
      - name: Extract Version
        id: version
        run: |
          VERSION_PREFIX=$(grep -m1 '<VersionPrefix>' Directory.Build.props | sed -E 's/.*<VersionPrefix>(.*)<\/VersionPrefix>.*/\1/')
            
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF##refs/tags/v}
          elif [[ "${GITHUB_REF}" == refs/heads/main ]]; then
            VERSION="$VERSION_PREFIX-beta.${GITHUB_RUN_NUMBER}"
          elif [[ "${GITHUB_REF}" =~ refs/heads/release/.* ]]; then
            VERSION="$VERSION_PREFIX-rc.${GITHUB_RUN_NUMBER}"
          else
            VERSION="$VERSION_PREFIX-dev.${GITHUB_RUN_NUMBER}"
          fi
            
          echo "VERSION=$VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      
      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --no-restore

      - name: Pack
        run: dotnet pack --configuration Release -o artifacts --no-build /p:Version=${{ env.VERSION }}

      - name: Publish to Nuget
        run: dotnet nuget push **/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json --skip-duplicate
      
      - name: Tag Commit
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag v${{ env.VERSION }}
          git push origin v${{ env.VERSION }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  